###########
# BUILDER #
###########

# pull official base image
FROM python:3.10 as builder

# set work directory
WORKDIR /usr/src/dj_dastore

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update \
    && apt-get -y install libpq-dev gcc \
    && pip install psycopg2 \
    && apt-get install -y netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# # lint
# RUN pip install --upgrade pip
# RUN pip install flake8==3.9.2
# COPY . .
# RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/dj_dastore/wheels -r requirements.txt
RUN pip install opencv-python-headless
RUN pip install python-decouple


#########
# FINAL #
#########

# pull official base image
FROM python:3.10

# create directory for the app user
RUN mkdir -p /home/dj_dastore

# create the app user
RUN addgroup --gid 1000 dj_dastore && adduser --uid 1000 --gid 1000 --disabled-password --gecos '' dj_dastore
#RUN addgroup --gid 1001 dj_dastore && adduser --uid 1001 --gid 1001 --disabled-password --gecos '' dj_dastore


# create the appropriate directories
ENV HOME=/home/dj_dastore
ENV APP_HOME=/home/dj_dastore/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static_cdn
RUN mkdir $APP_HOME/media_cdn
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && \
    apt-get install -y libpq-dev \
    && apt-get install -y netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Copy wheel files and requirements.txt from builder stage
COPY --from=builder /usr/src/dj_dastore/wheels /wheels
COPY --from=builder /usr/src/dj_dastore/requirements.txt .

# Install application requirements
# TODO: find a way to be less repetitive
RUN pip install --no-cache /wheels/*
RUN pip install opencv-python-headless
RUN pip install python-decouple


# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh


# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R dj_dastore:dj_dastore $APP_HOME

# change to the app user
USER dj_dastore

# # Collect static files
# RUN python manage.py collectstatic --noinput

# run entrypoint.prod.sh
ENTRYPOINT ["/home/dj_dastore/web/entrypoint.prod.sh"]
